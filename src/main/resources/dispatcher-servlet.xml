<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--此文件负责整个mvc中的配置-->
    <!--加载属性文件-->
    <context:property-placeholder location="classpath:resource.properties"/>
    <!-- 自动扫描装配 -->
    <context:component-scan base-package="eendtech.controller"/>
    <!--启用spring的一些annotation -->
    <context:annotation-config/>

    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->

    <mvc:annotation-driven/>

    <!--静态资源映射-->
    <!--本项目把静态资源放在了webapp的static目录下，资源映射如下-->
    <mvc:resources mapping="/css/**" location="/WEB-INF/static/css/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/static/js/"/>
    <mvc:resources mapping="/img/**" location="/WEB-INF/static/img/"/>
    <mvc:resources mapping="/fonts/**" location="/WEB-INF/static/fonts/"/>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/"/><!--设置JSP文件的目录位置-->
        <!--<property name="suffix" value=".jsp"/>-->
        <property name="order" value="0"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>

    <!--<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="eendtech.covert.DateConverter"/>
            </set>
        </property>
    </bean>-->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--设置请求编码格式，必须和JSP中的 pageEncoding属性一致,默认为ISO-8859-1-->
        <property name="defaultEncoding" value="UTF-8"/>
        <!--设置允许上传文件的最大值(2M),单位为字节-->
        <property name="maxInMemorySize" value="2097152"/>

    </bean>

    <!--<bean id="formatterService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
        <!--<property name="formatters">-->
            <!--<set>-->
                <!--<bean class="eendtech.Formatter.DateFormatter"/>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->

    <!--配置拦截器-->
    <!--<mvc:interceptors>
        &lt;!&ndash;使用Bean直接定义在<mvc:interceptor>下面的interceptor将拦截所有的请求&ndash;&gt;
        &lt;!&ndash;<bean class="eendtech.interceptor.LoginInterceptor"/>&ndash;&gt;
        <mvc:interceptor>
            <mvc:mapping path="/main"/>
            <bean class="eendtech.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->
</beans>